{{ config (alias = 'RTM_RDD_QUANTITY', materialized = 'view', schema = 'SUPPLY_CHAIN_INSIGHT ')}}

WITH NEWEST_LEADTIME_FOR_EACH_MONTH AS (
SELECT RETAILCODE,
       SERVICE_PROVIDER_CODE_WC,
       SERVICE_PROVIDER_CODE_GY,
       PROCESS_LEAD_TIME,
       TRANSPORTATION_LEAD_TIME,
       DBT_VALID_FROM AS VALID_FROM,
       ROW_NUMBER() OVER (PARTITION BY RETAILCODE, SERVICE_PROVIDER_CODE_WC, SERVICE_PROVIDER_CODE_GY, YEAR(DBT_VALID_FROM), MONTH(DBT_VALID_FROM) ORDER BY VALID_FROM DESC) AS RN
FROM {{ env_var('DBT_SOURCE_DATABASE', 'APITDBDEV') }}.MASTER_DATA.RTM_LEADTIME
),
ALL_ORDERS_WITH_LEAD_TIME AS (
--Historical join with lead time that has been changed
SELECT A.PRODUCT_SIZE,
       A.SAP_PRODUCT_CODE,
       A.QUANTITY,
       A.SP_CONFIRM_TIME,
       A.ARRIVED_TIME,
       (B.PROCESS_LEAD_TIME + B.TRANSPORTATION_LEAD_TIME) * 60 AS LEAD_TIME,
       TIMEDIFF(SECOND, A.SP_CONFIRM_TIME, A.ARRIVED_TIME) AS ARRIVE_TIME,
       CAST(CONCAT(YEAR(A.ARRIVED_TIME), '-', MONTH(A.ARRIVED_TIME), '-01') AS DATE) AS REPORT_DATE,
       B.SERVICE_PROVIDER_CODE_GY AS SP
FROM {{ env_var('DBT_SOURCE_DATABASE', 'APITDBDEV') }}.TRANSACTION_DATA.RTM_SALESORDER A
INNER JOIN NEWEST_LEADTIME_FOR_EACH_MONTH B
ON A.SAPCODE = B.RETAILCODE AND A.SPCODE = B.SERVICE_PROVIDER_CODE_WC
WHERE B.RN = 1 
      AND A.ARRIVED_TIME < DATE_TRUNC(MONTH, CURRENT_DATE())
      AND A.ARRIVED_TIME IS NOT NULL AND A.ORDER_STATUS IN ('Finished 已完成', 'Arrived 已送达') 
      AND B.PROCESS_LEAD_TIME + B.TRANSPORTATION_LEAD_TIME != 0
      AND YEAR(A.ARRIVED_TIME) = YEAR(B.VALID_FROM) AND MONTH(A.ARRIVED_TIME) = MONTH(B.VALID_FROM)
UNION
--Historical join with lead time that has never been changed
SELECT A.PRODUCT_SIZE,
       A.SAP_PRODUCT_CODE,
       A.QUANTITY,
       A.SP_CONFIRM_TIME,
       A.ARRIVED_TIME,
       (B.PROCESS_LEAD_TIME + B.TRANSPORTATION_LEAD_TIME) * 60 AS LEAD_TIME,
       TIMEDIFF(SECOND, A.SP_CONFIRM_TIME, A.ARRIVED_TIME) AS ARRIVE_TIME,
       CAST(CONCAT(YEAR(A.ARRIVED_TIME), '-', MONTH(A.ARRIVED_TIME), '-01') AS DATE) AS REPORT_DATE,
       B.SERVICE_PROVIDER_CODE_GY AS SP
FROM {{ env_var('DBT_SOURCE_DATABASE', 'APITDBDEV') }}.TRANSACTION_DATA.RTM_SALESORDER A
INNER JOIN NEWEST_LEADTIME_FOR_EACH_MONTH B
ON A.SAPCODE = B.RETAILCODE AND A.SPCODE = B.SERVICE_PROVIDER_CODE_WC
WHERE B.RN = 1 AND CAST(B.VALID_FROM AS DATE) = '1900-01-01'
      AND A.ARRIVED_TIME < DATE_TRUNC(MONTH, CURRENT_DATE())
      AND A.ARRIVED_TIME IS NOT NULL AND A.ORDER_STATUS IN ('Finished 已完成', 'Arrived 已送达') 
      AND B.PROCESS_LEAD_TIME + B.TRANSPORTATION_LEAD_TIME != 0
UNION
--This month join, directly use the current effective lead time
SELECT A.PRODUCT_SIZE,
       A.SAP_PRODUCT_CODE,
       A.QUANTITY,
       A.SP_CONFIRM_TIME,
       A.ARRIVED_TIME,
       (B.PROCESS_LEAD_TIME + B.TRANSPORTATION_LEAD_TIME) * 60 AS LEAD_TIME,
       TIMEDIFF(SECOND, A.SP_CONFIRM_TIME, A.ARRIVED_TIME) AS ARRIVE_TIME,
       CAST(CONCAT(YEAR(A.ARRIVED_TIME), '-', MONTH(A.ARRIVED_TIME), '-01') AS DATE) AS REPORT_DATE,
       B.SERVICE_PROVIDER_CODE_GY AS SP
FROM {{ env_var('DBT_SOURCE_DATABASE', 'APITDBDEV') }}.TRANSACTION_DATA.RTM_SALESORDER A
INNER JOIN APITDBDEV.MASTER_DATA.RTM_LEADTIME B
ON A.SAPCODE = B.RETAILCODE AND A.SPCODE = B.SERVICE_PROVIDER_CODE_WC
WHERE B.DBT_VALID_TO IS NULL
      AND YEAR(A.ARRIVED_TIME) = YEAR(CURRENT_DATE()) AND MONTH(A.ARRIVED_TIME) = YEAR(CURRENT_DATE())
      AND A.ARRIVED_TIME IS NOT NULL AND A.ORDER_STATUS IN ('Finished 已完成', 'Arrived 已送达') 
      AND B.PROCESS_LEAD_TIME + B.TRANSPORTATION_LEAD_TIME != 0
),
CHINA_MATERIALSALES AS (
SELECT *
FROM APITDBDEV.STAGING.EDW_MATERIALSALES
WHERE SALESORGCODE = 'A710' AND DISTRIBUTIONCHANNELCODE = '11'    
),
CTE AS (
SELECT A.*,
       B.BRANDNAME AS TIREBRAND,
       B.RIMDIAMETERINCHES AS RIMSIZE,
       B.DESIGN AS PATTERN,
       B.MATERIALNAME AS PRODUCT_NAME,
       C.MATERIALSOURCECOUNTRYNAME AS COUNTRY_OF_ORIGIN    
FROM ALL_ORDERS_WITH_LEAD_TIME A
LEFT JOIN APITDBDEV.STAGING.EDW_PRODUCT B
ON A.SAP_PRODUCT_CODE = B.MATERIALID 
LEFT JOIN CHINA_MATERIALSALES C
ON A.SAP_PRODUCT_CODE = C.MATERIALID
),
ALL_DELIVERY AS (
SELECT REPORT_DATE,
       SP,
       PRODUCT_SIZE,
       PRODUCT_NAME,
       COUNTRY_OF_ORIGIN,
       TIREBRAND,
       RIMSIZE,
       PATTERN,
       SUM(QUANTITY) AS ALL_QUANTITY,
       SUM(CASE WHEN ARRIVE_TIME <= LEAD_TIME THEN QUANTITY ELSE 0 END) AS ONTIME_QUANTITY
FROM CTE
GROUP BY REPORT_DATE,
       SP,
       PRODUCT_SIZE,
       PRODUCT_NAME,
       COUNTRY_OF_ORIGIN,
       TIREBRAND,
       RIMSIZE,
       PATTERN
) 
SELECT 'AP' AS REGION,
       'China' AS CLUSTER,
       'China' AS COUNTRY_NAME,
       'Consumer' AS PBU,
       'Consumer' AS "PBU-1",
       'RE' AS Channel,
       'RTM' AS CONSUMER_GROUP,
       TIREBRAND AS BRAND,
       RIMSIZE,
       PATTERN,
       COUNTRY_OF_ORIGIN,
       SP AS SERVICE_PROVIDER,
       NULL AS ROOT_CAUSE_L1,
       NULL AS ROOT_CAUSE_L2,
       REPORT_DATE AS MONTH_1,
       ALL_QUANTITY AS ORDER_QUANTITY,
       ONTIME_QUANTITY AS ORDER_QUANTITY_ON_TIME,
       ALL_QUANTITY - ONTIME_QUANTITY AS ORDER_QUANTITY_LATE
FROM ALL_DELIVERY